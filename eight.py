# Тинькофф котест – задание №8
# Миша сидел в переговорке и решил нарисовать ее план на листке бумаги. Когда он закончил рисовать план переговорки,
# он положил лист с планом на пол переговорки. Теперь ему стало интересно: а есть ли на плане точка,
# которая лежит ровно на том месте пола, за которое она отвечает?
# Формат входных данных
# Переговорка и ее план имеют форму прямоугольника. Первая строка входного файла содержит два вещественных числа:
# координаты переговорки (1≤X≤1000,1≤Y≤1000). Координаты углов переговорки равны (0,0), (X,0), (X,Y), (0,Y).
# Во второй строке файла даются восемь вещественных чисел, описывающих положение углов плана переговорки.
# Сначала вводятся координаты того угла плана,
# который соответствует углу переговорки с координатами (0,0) затем — (X,0), (X,Y), (0,Y).
# Гарантируется, что входные данные корректны, то есть план является прямоугольником,
# линейные размеры которого соответствуют размерам переговорки, а также он не выходит за границы перегородки.
# Все числа во входном файле вещественные, заданы с точностью 5 знаков после точки.
# План выполнен в масштабе не менее  0001 и строго менее 1.
# Формат выходных данных
# Выведите два вещественных числа — координаты неподвижной точки в координатах переговорки.
# Выводить число нужно с точностью не менее четырех знаков после запятой.
import sympy
import sympy as sp
from sympy import Eq, solveset


def eight(one_string, two_string):
    x = one_string[0]
    y = one_string[1]
    x1 = (two_string[2] - two_string[0]) / x
    y1 = (two_string[7] - two_string[1]) / y
    dot_x = sp.symbols('dot_x')
    ask_x = Eq(dot_x / x1 - dot_x, two_string[0] / x1)
    dot_y = sp.symbols('dot_y')
    ask_y = Eq(dot_y / y1 - dot_y, two_string[1] / y1)
    x = [float(i) for i in solveset(ask_x, domain=sympy.Reals)]
    y = [float(i) for i in solveset(ask_y, domain=sympy.Reals)]
    return x[0], y[0]  # (2.5, 2.0833333333333335)


# print(eight(one_string=[10, 5],
#             two_string=[3.0, 2.5, 1.0, 2.5, 1.0, 1.5, 3.0, 1.5]))
